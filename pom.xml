<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.6.6</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<groupId>br.com.ponto</groupId>
	<artifactId>registro</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>registro</name>
	<description>API de registro de ponto</description>
	<properties>
		<java.version>17</java.version>
		<testcontainers.version>1.16.2</testcontainers.version>
		<mapstruct.version>1.4.2.Final</mapstruct.version>
		<mapstruct.processor.version>1.4.2.Final</mapstruct.processor.version>
		<jacoco.version>0.8.7</jacoco.version>
		<keycloak.dasniko.version>2.1.2</keycloak.dasniko.version>
		<springdoc.version>1.6.6</springdoc.version>
		<sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
    	<sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
    	<sonar.jacoco.reportPath>${project.test.result.directory}/jacoco/jacoco.exec</sonar.jacoco.reportPath>
    	<sonar.coverage.jacoco.xmlReportPaths>${project.test.result.directory}/jacoco/jacoco.xml</sonar.coverage.jacoco.xmlReportPaths>
    	<sonar.language>java</sonar.language>
		<project.test.result.directory>${project.build.directory}/test-results</project.test.result.directory>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-oauth2-resource-server</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>junit-jupiter</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>postgresql</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>rest-assured</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<version>${mapstruct.version}</version>
		</dependency>
		<dependency>
			<groupId>com.github.dasniko</groupId>
			<artifactId>testcontainers-keycloak</artifactId>
			<version>${keycloak.dasniko.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-ui</artifactId>
            <version>${springdoc.version}</version>
        </dependency>
	</dependencies>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.testcontainers</groupId>
				<artifactId>testcontainers-bom</artifactId>
				<version>${testcontainers.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>

			<!-- MAPSCTRUCT CONFIG -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<annotationProcessorPaths>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>${lombok.version}</version>
						</path>
						<path>
							<groupId>org.mapstruct</groupId>
							<artifactId>mapstruct-processor</artifactId>
							<version>${mapstruct.processor.version}</version>
						</path>
					</annotationProcessorPaths>
					<compilerArgs>
						<arg>-Amapstruct.suppressGeneratorTimestamp=true</arg>
						<arg>-Amapstruct.defaultComponentModel=spring</arg>
						<arg>-Aquerydsl.entityAccessors=true</arg>
						<arg>-Aquerydsl.useFields=false</arg>
					</compilerArgs>
				</configuration>
			</plugin>

			<!-- TESTES INTEGRADOS CONFIG -->
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skip>${skipTests}</skip>
					<argLine>${jacocoArgLine}</argLine>
					<reportsDirectory>${project.test.result.directory}/surefire</reportsDirectory>
				</configuration>
				<executions>
					<execution>
						<id>integration-tests</id>
						<phase>test</phase>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<skip>${skipIntegrationTests}</skip>
							<includes>
								<include>**/*IT.java</include>
							</includes>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- JACOCO CONFIG -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.version}</version>
				<configuration>
					<skip>${skipUnitTests}</skip>
				</configuration>
				<executions>
					<execution>
						<id>default-prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<propertyName>jacocoArgLine</propertyName>
							<destFile>${project.test.result.directory}/jacoco/jacoco.exec</destFile>
						</configuration>
					</execution>
					<execution>
						<id>default-report</id>
						<goals>
							<goal>report</goal>
						</goals>
						<phase>test</phase>
						<configuration>
							<dataFile>${project.test.result.directory}/jacoco/jacoco.exec</dataFile>
							<outputDirectory>${project.test.result.directory}/jacoco</outputDirectory>
							<excludes>
								<exclude>br/com/ponto/registro/domain/service/ServiceUtils.class</exclude>
								<exclude>br/com/ponto/registro/domain/model/constants/**</exclude>
								<exclude>br/com/ponto/registro/domain/model/converters/**</exclude>
								<exclude>br/com/ponto/registro/domain/exception/**</exclude>
								<exclude>br/com/ponto/registro/core/**</exclude>
								<exclude>br/com/ponto/registro/api/exceptionhandler/**</exclude>
								<exclude>br/com/ponto/registro/api/v1/mapper/**</exclude>
							</excludes>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
